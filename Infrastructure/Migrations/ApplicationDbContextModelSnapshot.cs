// <auto-generated />
using System;
using Infrastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Infrastructure.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Domain.DocumentationAggregate.Documentation", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Hidden")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("ReadOnly")
                        .HasColumnType("bit");

                    b.Property<Guid>("TemplateId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("Documentations", (string)null);
                });

            modelBuilder.Entity("Domain.DocumentationTemplate.DocumentationTemplate", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("DocumentationTemplates", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("f843bcd9-57ed-46aa-b65b-fcaeb1eb9628"),
                            Title = "Template1"
                        });
                });

            modelBuilder.Entity("Domain.DocumentationAggregate.Documentation", b =>
                {
                    b.OwnsMany("Domain.DocumentationAggregate.Entities.DocumentationItem", "DocumentationItems", b1 =>
                        {
                            b1.Property<Guid>("Id")
                                .HasColumnType("uniqueidentifier")
                                .HasColumnName("DocumentationItemId");

                            b1.Property<Guid>("DocumentationId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("Content")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<int>("Position")
                                .HasColumnType("int");

                            b1.HasKey("Id", "DocumentationId");

                            b1.HasIndex("DocumentationId");

                            b1.ToTable("DocumentationItems", (string)null);

                            b1.WithOwner()
                                .HasForeignKey("DocumentationId");
                        });

                    b.OwnsOne("Domain.DocumentationAggregate.ValueObjects.DocumentationCategory", "Category", b1 =>
                        {
                            b1.Property<Guid>("DocumentationId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("Value")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.HasKey("DocumentationId");

                            b1.ToTable("Documentations");

                            b1.WithOwner()
                                .HasForeignKey("DocumentationId");
                        });

                    b.Navigation("Category")
                        .IsRequired();

                    b.Navigation("DocumentationItems");
                });

            modelBuilder.Entity("Domain.DocumentationTemplate.DocumentationTemplate", b =>
                {
                    b.OwnsMany("Domain.DocumentationTemplate.ValueObjects.DocumentationTemplateHeading", "DocumentationTemplateHeadings", b1 =>
                        {
                            b1.Property<int>("Id")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("int");

                            SqlServerPropertyBuilderExtensions.UseIdentityColumn(b1.Property<int>("Id"));

                            b1.Property<Guid>("DocumentationTemplateId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<int>("Position")
                                .HasColumnType("int");

                            b1.Property<string>("Title")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.HasKey("Id", "DocumentationTemplateId");

                            b1.HasIndex("DocumentationTemplateId");

                            b1.ToTable("DocumentationTemplateHeadings", (string)null);

                            b1.WithOwner()
                                .HasForeignKey("DocumentationTemplateId");

                            b1.HasData(
                                new
                                {
                                    Id = 1,
                                    DocumentationTemplateId = new Guid("f843bcd9-57ed-46aa-b65b-fcaeb1eb9628"),
                                    Position = 0,
                                    Title = "Heading1"
                                },
                                new
                                {
                                    Id = 2,
                                    DocumentationTemplateId = new Guid("f843bcd9-57ed-46aa-b65b-fcaeb1eb9628"),
                                    Position = 1,
                                    Title = "Heading2"
                                });
                        });

                    b.Navigation("DocumentationTemplateHeadings");
                });
#pragma warning restore 612, 618
        }
    }
}
